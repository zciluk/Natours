{
  "_args": [
    [
      {
        "raw": "postcss-cli",
        "scope": null,
        "escapedName": "postcss-cli",
        "name": "postcss-cli",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/Users/kuliczkowsky/Desktop/Advanced CSS Sass/advanced-css-course-master/Natours/starter"
    ]
  ],
  "_from": "postcss-cli",
  "_hasShrinkwrap": false,
  "_id": "postcss-cli@6.0.1",
  "_location": "/postcss-cli",
  "_nodeVersion": "10.7.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/postcss-cli_6.0.1_1539827657661_0.8375634748736926"
  },
  "_npmUser": {
    "name": "ryanzim",
    "email": "opensrc@ryanzim.com"
  },
  "_npmVersion": "6.1.0",
  "_phantomChildren": {
    "color-convert": "1.9.3",
    "escape-string-regexp": "1.0.5",
    "execa": "0.10.0",
    "get-caller-file": "1.0.3",
    "has-flag": "3.0.0",
    "locate-path": "3.0.0",
    "mem": "4.0.0",
    "require-directory": "2.1.1",
    "require-main-filename": "1.0.1",
    "set-blocking": "2.0.0",
    "wrap-ansi": "2.1.0",
    "xregexp": "4.0.0",
    "y18n": "3.2.1"
  },
  "_requested": {
    "raw": "postcss-cli",
    "scope": null,
    "escapedName": "postcss-cli",
    "name": "postcss-cli",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#DEV:/",
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/postcss-cli/-/postcss-cli-6.0.1.tgz",
  "_shasum": "24c990f9313c7b21b2c4b2301c8f21591240c23f",
  "_shrinkwrap": null,
  "_spec": "postcss-cli",
  "_where": "/Users/kuliczkowsky/Desktop/Advanced CSS Sass/advanced-css-course-master/Natours/starter",
  "bin": {
    "postcss": "./bin/postcss"
  },
  "bugs": {
    "url": "https://github.com/postcss/postcss-cli/issues"
  },
  "contributors": [
    {
      "name": "Michael Ciniawky",
      "email": "michael.ciniawsky@gmail.com"
    },
    {
      "name": "Ryan Zimmermann",
      "email": "opensrc@ryanzim.com"
    }
  ],
  "dependencies": {
    "chalk": "^2.1.0",
    "chokidar": "^2.0.0",
    "dependency-graph": "^0.7.0",
    "fs-extra": "^7.0.0",
    "get-stdin": "^6.0.0",
    "globby": "^8.0.0",
    "postcss": "^7.0.0",
    "postcss-load-config": "^2.0.0",
    "postcss-reporter": "^6.0.0",
    "pretty-hrtime": "^1.0.3",
    "read-cache": "^1.0.0",
    "yargs": "^12.0.1"
  },
  "description": "CLI for PostCSS",
  "devDependencies": {
    "ava": "^0.25.0",
    "coveralls": "^3.0.0",
    "eslint": "^5.0.0",
    "eslint-config-problems": "1.1.0",
    "nyc": "^13.1.0",
    "postcss-import": "^12.0.0",
    "prettier": "~1.14.0",
    "sugarss": "^2.0.0",
    "uuid": "^3.0.1"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-M9GiEMzXVMlI4ln8e+mdeHT+qvoHVZdlN06hj5/EhrRZWDr+J1sniPeGJ4nghknl+du3Oj2UoqqhgpKKhiZ9+w==",
    "shasum": "24c990f9313c7b21b2c4b2301c8f21591240c23f",
    "tarball": "https://registry.npmjs.org/postcss-cli/-/postcss-cli-6.0.1.tgz",
    "fileCount": 8,
    "unpackedSize": 28658,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbx+fKCRA9TVsSAnZWagAA15IQAKL6GCs2/+eNPcOPgqX3\ns3NmZPvCMs1ExjHD/o5+bPsE8C3SUaPpMK9M0GfZsoKx4gwouaRwGDhRLlUQ\noFYDLm7IkFIJXb4U+KWfs4fsbjCLyVpyOxWJ5/IdB1qq1nS5tVZwXrimaGkC\nx5uRYfbrQYiikEh2hq+NCUueKyrojJi3vdu1CVlcfR/LMauj1mg/gzW2Fwgi\nexrNffuzUbla8Xuuc6MvPV/MPPxVn6W8NmzM+5rd9qvF4K1oYpHLJ6L4Q56t\nM0Fhd0d8N84FKTGTxcxGvHtYnp3D3/bmnhubJ4BTQc+gtBHCX8rbLFOldKr0\n6uljwS+4+FndaOQE3Y/2wb/RxGZ3/NeuDyx+fgh4M5svPR0wNIPvpYeKk0TB\ndkfO6TuEdgGKjG3pgbaruHnGWMoC/yrMN+5/x0Gdo7HZgazNHNxTeJ+1xWae\ntmkEeVyosSfzHIH4lKX7e3W/KQ80jf4i+v0t+oShR2FjMDOycPaJrcYNpnHe\nAjGMq0z2yaa04rUzgFa6EkJEwwVthmbpTu9KZIiuU78WC10MOpWcUkoZQtyA\nzEAFZ4YDiaw/ORaifjwzv8g5KX77G9A7kV9ppEobEo1o8RVYJ991QQQM0tET\n4IcG22SM5JesnO5tFTAoCG3+idsBro0cti82Rgq+rWeydNQPsh1G/o7o9yJ7\nj0Hw\r\n=YS5Y\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": ">=6"
  },
  "files": [
    "bin",
    "index.js",
    "lib"
  ],
  "gitHead": "46b7c10c59e4b3fa17f7a55f86f398d25861416d",
  "homepage": "https://github.com/postcss/postcss-cli#readme",
  "keywords": [
    "cli",
    "postcss",
    "postcss-runner"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "ai",
      "email": "andrey@sitnik.ru"
    },
    {
      "name": "pirxpilot",
      "email": "pirxpilot@furkot.com"
    },
    {
      "name": "ryanzim",
      "email": "opensrc@ryanzim.com"
    },
    {
      "name": "watilde",
      "email": "daijiro.wachi@gmail.com"
    }
  ],
  "name": "postcss-cli",
  "optionalDependencies": {},
  "readme": "[![npm][npm]][npm-url]\n[![node][node]][node-url]\n[![Greenkeeper badge](https://badges.greenkeeper.io/postcss/postcss-cli.svg)](https://greenkeeper.io/)\n[![tests][tests]][tests-url]\n[![cover][cover]][cover-url]\n[![chat][chat]][chat-url]\n\n<div align=\"center\">\n  <img width=\"100\" height=\"100\" title=\"CLI\" src=\"http://postcss.github.io/postcss-cli/logo.svg\">\n  <a href=\"https://github.com/postcss/postcss\">\n    <img width=\"110\" height=\"110\" title=\"PostCSS\" src=\"http://postcss.github.io/postcss/logo.svg\" hspace=\"10\">\n  </a>\n  <h1>PostCSS CLI</h1>\n</div>\n\n<h2 align=\"center\">Install</h2>\n\n```bash\nnpm i -g|-D postcss-cli\n```\n\n<h2 align=\"center\">Usage</h2>\n\n```\nUsage:\n  postcss [input.css] [OPTIONS] [-o|--output output.css] [--watch|-w]\n  postcss <input.css>... [OPTIONS] --dir <output-directory> [--watch|-w]\n  postcss <input-directory> [OPTIONS] --dir <output-directory> [--watch|-w]\n  postcss <input-glob-pattern> [OPTIONS] --dir <output-directory> [--watch|-w]\n  postcss <input.css>... [OPTIONS] --replace\n\nBasic options:\n  -o, --output   Output file                                            [string]\n  -d, --dir      Output directory                                       [string]\n  -r, --replace  Replace (overwrite) the input file                    [boolean]\n  --map, -m      Create an external sourcemap\n  --no-map       Disable the default inline sourcemaps\n  --verbose      Be verbose                                            [boolean]\n  --watch, -w    Watch files for changes and recompile as needed       [boolean]\n  --env          A shortcut for setting NODE_ENV                        [string]\n\nOptions for when not using a config file:\n  -u, --use      List of postcss plugins to use                          [array]\n  --parser       Custom postcss parser                                  [string]\n  --stringifier  Custom postcss stringifier                             [string]\n  --syntax       Custom postcss syntax                                  [string]\n\nAdvanced options:\n  --ext     Override the output file extension; for use with --dir      [string]\n  --base    Mirror the directory structure relative to this path in the output\n            directory, for use with --dir                               [string]\n  --poll    Use polling for file watching. Can optionally pass polling interval;\n            default 100 ms\n  --config  Set a custom directory to look for a config file            [string]\n\nOptions:\n  --version  Show version number                                       [boolean]\n  -h, --help     Show help                                             [boolean]\n\nExamples:\n  postcss input.css -o output.css                       Basic usage\n  postcss src/**/*.css --base src --dir build           Glob Pattern & output\n  cat input.css | postcss -u autoprefixer > output.css  Piping input & output\n\nIf no input files are passed, it reads from stdin. If neither -o, --dir, or\n--replace is passed, it writes to stdout.\n\nIf there are multiple input files, the --dir or --replace option must be passed.\n\nInput files may contain globs (e.g. src/**/*.css). If you pass an input directory, it will process\nall files in the directory and any subdirectories, respecting the glob pattern.\n```\n\n> ℹ️ More details on custom parsers, stringifiers and syntaxes, can be found [here](https://github.com/postcss/postcss#syntaxes).\n\n### [Config](https://github.com/michael-ciniawsky/postcss-load-config)\n\nIf you need to pass options to your plugins, or have a long plugin chain, you'll want to use a configuration file.\n\n**postcss.config.js**\n\n```js\nmodule.exports = {\n  parser: 'sugarss',\n  plugins: [\n    require('postcss-import')({ ...options }),\n    require('postcss-url')({ url: 'copy', useHash: true })\n  ]\n}\n```\n\nNote that you **can not** set the `from` or `to` options for postcss in the config file. They are set automatically based on the CLI arguments.\n\n### Context\n\nFor more advanced usage it's recommend to to use a function in `postcss.config.js`, this gives you access to the CLI context to dynamically apply options and plugins **per file**\n\n|   Name    |    Type    |              Default               | Description          |\n| :-------: | :--------: | :--------------------------------: | :------------------- |\n|   `env`   | `{String}` |          `'development'`           | process.env.NODE_ENV |\n|  `file`   | `{Object}` |    `dirname, basename, extname`    | File                 |\n| `options` | `{Object}` | `map, parser, syntax, stringifier` | PostCSS Options      |\n\n**postcss.config.js**\n\n```js\nmodule.exports = ctx => ({\n  map: ctx.options.map,\n  parser: ctx.file.extname === '.sss' ? 'sugarss' : false,\n  plugins: {\n    'postcss-import': { root: ctx.file.dirname },\n    cssnano: ctx.env === 'production' ? {} : false\n  }\n})\n```\n\n> ⚠️ If you want to set options via CLI, it's mandatory to reference `ctx.options` in `postcss.config.js`\n\n```bash\npostcss input.sss -p sugarss -o output.css -m\n```\n\n**postcss.config.js**\n\n```js\nmodule.exports = ctx => ({\n  map: ctx.options.map,\n  parser: ctx.options.parser,\n  plugins: {\n    'postcss-import': { root: ctx.file.dirname },\n    cssnano: ctx.env === 'production' ? {} : false\n  }\n})\n```\n\n[npm]: https://img.shields.io/npm/v/postcss-cli.svg\n[npm-url]: https://npmjs.com/package/postcss-cli\n[node]: https://img.shields.io/node/v/postcss-cli.svg\n[node-url]: https://nodejs.org/\n[tests]: http://img.shields.io/travis/postcss/postcss-cli/master.svg\n[tests-url]: https://travis-ci.org/postcss/postcss-cli\n[cover]: https://img.shields.io/coveralls/postcss/postcss-cli/master.svg\n[cover-url]: https://coveralls.io/github/postcss/postcss-cli\n[chat]: https://img.shields.io/gitter/room/postcss/postcss.svg\n[chat-url]: https://gitter.im/postcss/postcss\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/postcss/postcss-cli.git"
  },
  "scripts": {
    "ci": "eslint . && nyc ava -v && npm run prettier -- --list-different",
    "clean": "node test/helpers/clean.js",
    "format": "npm run prettier -- --write && eslint . --fix",
    "pretest": "npm run clean && npm run format",
    "prettier": "prettier --single-quote --no-semi **/*.{js,md}",
    "test": "nyc ava -v"
  },
  "version": "6.0.1"
}
