{
  "_args": [
    [
      {
        "raw": "merge2@^1.2.1",
        "scope": null,
        "escapedName": "merge2",
        "name": "merge2",
        "rawSpec": "^1.2.1",
        "spec": ">=1.2.1 <2.0.0",
        "type": "range"
      },
      "/Users/kuliczkowsky/Desktop/Advanced CSS Sass/advanced-css-course-master/Natours/starter/node_modules/fast-glob"
    ]
  ],
  "_from": "merge2@^1.2.1",
  "_hasShrinkwrap": false,
  "_id": "merge2@1.2.3",
  "_location": "/merge2",
  "_nodeVersion": "8.12.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/merge2_1.2.3_1539437577227_0.12785779573811085"
  },
  "_npmUser": {
    "name": "zensh",
    "email": "admin@zensh.com"
  },
  "_npmVersion": "6.4.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "merge2@^1.2.1",
    "scope": null,
    "escapedName": "merge2",
    "name": "merge2",
    "rawSpec": "^1.2.1",
    "spec": ">=1.2.1 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/fast-glob"
  ],
  "_resolved": "https://registry.npmjs.org/merge2/-/merge2-1.2.3.tgz",
  "_shasum": "7ee99dbd69bb6481689253f018488a1b902b0ed5",
  "_shrinkwrap": null,
  "_spec": "merge2@^1.2.1",
  "_where": "/Users/kuliczkowsky/Desktop/Advanced CSS Sass/advanced-css-course-master/Natours/starter/node_modules/fast-glob",
  "authors": [
    "Yan Qing <admin@zensh.com>"
  ],
  "bugs": {
    "url": "https://github.com/teambition/merge2/issues"
  },
  "dependencies": {},
  "description": "Merge multiple streams into one stream in sequence or parallel.",
  "devDependencies": {
    "@std/esm": "^0.26.0",
    "standard": "^12.0.1",
    "through2": "^2.0.3",
    "thunks": "^4.9.2",
    "tman": "^1.8.1",
    "to-through": "^2.0.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-gdUU1Fwj5ep4kplwcmftruWofEFt6lfpkkr3h860CXbAB9c3hGb55EOL2ali0Td5oebvW0E1+3Sr+Ur7XfKpRA==",
    "shasum": "7ee99dbd69bb6481689253f018488a1b902b0ed5",
    "tarball": "https://registry.npmjs.org/merge2/-/merge2-1.2.3.tgz",
    "fileCount": 5,
    "unpackedSize": 11179,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbwfQKCRA9TVsSAnZWagAAPZYP/RoffmCFre0R/7XzcXje\nwcrz6Q7QWQeC6Xmjmf83tOJ+fP5M9v7WJYcWCO/oEIacqq0d5eLLw2GUhwYG\njwhcALvz90fft9+nVIiLlA0B4/AD8VRZP2wext53XiWEzniDpWPHOI2XI6Lq\n4SgNwXzzhV8GFao4ps/u2tjeXcghuVjFcxFEeu8vS52Xsq7ZbnGw5UjQiYaB\nQtt1mBneBnQ9NKsT7xszgeSlznW4X91gJ4N/djIkfBwh89wSf4cQWI8/VtyQ\nES3gP1jRDe54fM10A3WLLsSgTAMVILZ/pB+PUUSfZxB1bEdhqvUd51/HfCS2\nv5AWQfMvYTef53pT9PWwTN+wCHmje0XM+fdXdSretfbVeiizI2ziuF6t1ApZ\nuA12ljQx8XrzIWLEENhnhgw5eS2UdWMkYARjzGgjIaATIIMm9ZSsxsK2kH6K\nbmEDZ6t/3HMQSBW9JtAhJZ9KZOUJlSnHS2UV1fBoPh7MGBmZq9qyOJ69+bwn\n2WAcV2MI6k1GwhDIaojnou4wOuQ3CGh5CD1D+EHEDzcTQCZUEOKsDsgXIchB\nJPv0M06ailmlK6pNsMXkD1f9XC09OZJCEf49S/jMgOl5gf9XH1C64dv5nYtd\nLFxZ0YFdqB9FpV44cFoX0mkNYDe41LAP9swzSCu4LySvi+w9eEE+FW1jgPXn\nrFV6\r\n=exgQ\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": ">= 4.5.0"
  },
  "files": [
    "README.md",
    "index.js",
    "index.mjs"
  ],
  "gitHead": "d2f21832a16c8eb24c853b3e7cb133040688c898",
  "homepage": "https://github.com/teambition/merge2",
  "jsnext:main": "index.mjs",
  "keywords": [
    "merge2",
    "multiple",
    "sequence",
    "parallel",
    "merge",
    "stream",
    "merge stream",
    "sync"
  ],
  "license": "MIT",
  "main": "./index",
  "maintainers": [
    {
      "name": "zensh",
      "email": "admin@zensh.com"
    }
  ],
  "name": "merge2",
  "optionalDependencies": {},
  "readme": "# merge2\n\nMerge multiple streams into one stream in sequence or parallel.\n\n[![NPM version][npm-image]][npm-url]\n[![Build Status][travis-image]][travis-url]\n[![Downloads][downloads-image]][downloads-url]\n\n## Install\n\nInstall with [npm](https://npmjs.org/package/merge2)\n\n```sh\nnpm install merge2\n```\n\n## Usage\n\n```js\nconst gulp = require('gulp')\nconst merge2 = require('merge2')\nconst concat = require('gulp-concat')\nconst minifyHtml = require('gulp-minify-html')\nconst ngtemplate = require('gulp-ngtemplate')\n\ngulp.task('app-js', function () {\n  return merge2(\n      gulp.src('static/src/tpl/*.html')\n        .pipe(minifyHtml({empty: true}))\n        .pipe(ngtemplate({\n          module: 'genTemplates',\n          standalone: true\n        })\n      ), gulp.src([\n        'static/src/js/app.js',\n        'static/src/js/locale_zh-cn.js',\n        'static/src/js/router.js',\n        'static/src/js/tools.js',\n        'static/src/js/services.js',\n        'static/src/js/filters.js',\n        'static/src/js/directives.js',\n        'static/src/js/controllers.js'\n      ])\n    )\n    .pipe(concat('app.js'))\n    .pipe(gulp.dest('static/dist/js/'))\n})\n```\n\n```js\nconst stream = merge2([stream1, stream2], stream3, {end: false})\n//...\nstream.add(stream4, stream5)\n//..\nstream.end()\n```\n\n```js\n// equal to merge2([stream1, stream2], stream3)\nconst stream = merge2()\nstream.add([stream1, stream2])\nstream.add(stream3)\n```\n\n```js\n// merge order:\n//   1. merge `stream1`;\n//   2. merge `stream2` and `stream3` in parallel after `stream1` merged;\n//   3. merge 'stream4' after `stream2` and `stream3` merged;\nconst stream = merge2(stream1, [stream2, stream3], stream4)\n\n// merge order:\n//   1. merge `stream5` and `stream6` in parallel after `stream4` merged;\n//   2. merge 'stream7' after `stream5` and `stream6` merged;\nstream.add([stream5, stream6], stream7)\n```\n\n```js\n// nest merge\n// equal to merge2(stream1, stream2, stream6, stream3, [stream4, stream5]);\nconst streamA = merge2(stream1, stream2)\nconst streamB = merge2(stream3, [stream4, stream5])\nconst stream = merge2(streamA, streamB)\nstreamA.add(stream6)\n```\n\n## API\n\n```js\nconst merge2 = require('merge2')\n```\n\n### merge2()\n\n### merge2(options)\n\n### merge2(stream1, stream2, ..., streamN)\n\n### merge2(stream1, stream2, ..., streamN, options)\n\n### merge2(stream1, [stream2, stream3, ...], streamN, options)\n\nreturn a duplex stream (mergedStream). streams in array will be merged in parallel.\n\n### mergedStream.add(stream)\n\n### mergedStream.add(stream1, [stream2, stream3, ...], ...)\n\nreturn the mergedStream.\n\n### mergedStream.on('queueDrain', function() {})\n\nIt will emit 'queueDrain' when all streams merged. If you set `end === false` in options, this event give you a notice that should add more streams to merge or end the mergedStream.\n\n#### stream\n\n*option*\nType: `Readable` or `Duplex` or `Transform` stream.\n\n#### options\n\n*option*\nType: `Object`.\n\n* **end** - `Boolean` - if `end === false` then mergedStream will not be auto ended, you should end by yourself. **Default:** `undefined`\n\n* **objectMode** - `Boolean` . **Default:** `true`\n\n`objectMode` and other options(`highWaterMark`, `defaultEncoding` ...) is same as Node.js `Stream`.\n\n## License\n\nMIT Â© [Teambition](https://www.teambition.com)\n\n[npm-url]: https://npmjs.org/package/merge2\n[npm-image]: http://img.shields.io/npm/v/merge2.svg\n\n[travis-url]: https://travis-ci.org/teambition/merge2\n[travis-image]: http://img.shields.io/travis/teambition/merge2.svg\n\n[downloads-url]: https://npmjs.org/package/merge2\n[downloads-image]: http://img.shields.io/npm/dm/merge2.svg?style=flat-square\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/teambition/merge2.git"
  },
  "scripts": {
    "test": "standard && tman"
  },
  "version": "1.2.3"
}
